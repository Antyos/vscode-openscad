<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scad</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>OpenSCAD</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>/\*\*(?!/)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.scad</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.scad</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.scad</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.scad</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>name</key>
			<string>string.quoted.double.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.scad</string>
				</dict>
			</dict>
			<key>name</key>
			<string>invalid.string.quoted.single.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.scad</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(let|for|intersection_for|each|module|function|undef|assert)\b</string>
			<key>name</key>
			<string>keyword.control.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(include|use|import|dxf_dim|dxf_cross|surface)\b</string>
			<key>name</key>
			<string>keyword.control.import.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(str|chr|concat|lookup|search|version|version_num|norm|cross|parent_module)\b</string>
			<key>name</key>
			<string>support.function.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(text|children|echo|group|offset)\b</string>
			<key>name</key>
			<string>support.function.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(abs|sign|rands|min|max|round|ceil|floor|pow|sqrt|exp|len|log|ln)\b</string>
			<key>name</key>
			<string>support.function.math.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(sin|cos|asin|acos|tan|atan|atan2)\b</string>
			<key>name</key>
			<string>support.function.math.trig.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(scale|translate|rotate|multmatrix|color|projection|hull|resize|mirror|minkowski)\b</string>
			<key>name</key>
			<string>support.class.transform.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(union|difference|intersection|render)\b</string>
			<key>name</key>
			<string>support.class.csgop.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(cube|sphere|cylinder|polyhedron)\b</string>
			<key>name</key>
			<string>support.class.prim3d.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(square|circle|polygon)\b</string>
			<key>name</key>
			<string>support.class.prim2d.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(linear_extrude|rotate_extrude)\b</string>
			<key>name</key>
			<string>support.class.extrude.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(assign|child|import_dxf|import_stl)\b</string>
			<key>name</key>
			<string>invalid.deprecated</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>meta.delimiter.method.period.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>=(?!=)</string>
			<key>name</key>
			<string>keyword.operator.assignment.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\/|%</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>!|&amp;&amp;|\|\|</string>
			<key>name</key>
			<string>keyword.operator.logical.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;=|&lt;|==|!=|&gt;=|&gt;</string>
			<key>name</key>
			<string>keyword.operator.relational.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\?|\:</string>
			<key>name</key>
			<string>keyword.operator.conditional.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#|%|!</string>
			<key>name</key>
			<string>keyword.operator.other.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\btrue\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bfalse\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\$(children|fn|fa|fs|t|preview|vpt|vpr|vpd|parent_modules)\b</string>
			<key>name</key>
			<string>variable.language.scad</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.scad</string>
	<key>uuid</key>
	<string>ED71CA06-521E-4D30-B9C0-480808749662</string>
</dict>
</plist>